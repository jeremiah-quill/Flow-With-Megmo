{"ast":null,"code":"var _jsxFileName = \"/Users/jeremiahquill/Desktop/code/react-express-test-app/client/src/components/BraintreeDropIn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\"; // import \"./index.css\";\n\nimport dropin from \"braintree-web-drop-in\"; // import { Button } from \"reactstrap\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BraintreeDropIn(props) {\n  _s();\n\n  const tokenizedKey = \"sandbox_9qj522s2_ymtkdnwk4zxckp3y\";\n  const {\n    show,\n    onPaymentCompleted\n  } = props;\n  const [braintreeInstance, setBraintreeInstance] = useState(undefined);\n\n  const pay = () => {\n    if (braintreeInstance) {\n      braintreeInstance.requestPaymentMethod((error, payload) => {\n        if (error) {\n          console.error(error);\n        } else {\n          // const paymentMethodNonce = payload.nonce;\n          // use below instead of above to match braintree docs\n          const payment_method_nonce = payload.nonce;\n          console.log(\"payment method nonce\", payment_method_nonce); // TODO: use the paymentMethodNonce to\n          //  call you server and complete the payment here\n\n          fetch(\"/checkout\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: {\n              payment_method_nonce\n            }\n          }).then(response => response.json()).then(data => {\n            console.log(data);\n          }); // ...\n          // alert(`Payment completed with nonce=${payment_method_nonce}`);\n          // onPaymentCompleted();\n        }\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (show) {\n      const initializeBraintree = () => dropin.create({\n        // insert your tokenization key or client token here\n        authorization: tokenizedKey,\n        paymentOptionPriority: [\"venmo\", \"card\", \"paypal\"],\n        container: \"#braintree-drop-in-div\"\n      }, function (error, instance) {\n        if (error) console.error(error);else setBraintreeInstance(instance);\n      });\n\n      if (braintreeInstance) {\n        braintreeInstance.teardown().then(() => {\n          initializeBraintree();\n        });\n      } else {\n        initializeBraintree();\n      }\n    }\n  }, [show]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: `${show ? \"block\" : \"none\"}`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"braintree-drop-in-div\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"braintreePayButton\",\n      type: \"primary\",\n      disabled: !braintreeInstance,\n      onClick: pay // () => {\n      // if (braintreeInstance) {\n      // \tbraintreeInstance.requestPaymentMethod((error, payload) => {\n      // \t\tif (error) {\n      // \t\t\tconsole.error(error);\n      // \t\t} else {\n      // \t\t\t// const paymentMethodNonce = payload.nonce;\n      //             // use below instead of above to match braintree docs\n      //             const payment_method_nonce = payload.nonce;\n      // \t\t\tconsole.log(\"payment method nonce\", payload.nonce);\n      // \t\t\t// TODO: use the paymentMethodNonce to\n      // \t\t\t//  call you server and complete the payment here\n      //             fetch(\"/checkout\", {\n      //                 method: \"POST\",\n      //                 headers: {\n      //                     \"Content-Type\": \"application/json\",\n      //                 },\n      //                 body: JSON.stringify(payment_method_nonce),\n      //             })\n      //                 .then((response) => response.json())\n      //                 .then((data) => {\n      //                     console.log(data);\n      //                 });\n      // \t\t\t// ...\n      // \t\t\t// alert(`Payment completed with nonce=${payment_method_nonce}`);\n      // \t\t\tonPaymentCompleted();\n      // \t\t}\n      // \t});\n      // }\n      // }\n      ,\n      children: \"Pay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 3\n  }, this);\n}\n\n_s(BraintreeDropIn, \"VUDUeH7pygx+xiFWFvtRU33/Jxs=\");\n\n_c = BraintreeDropIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"BraintreeDropIn\");","map":{"version":3,"sources":["/Users/jeremiahquill/Desktop/code/react-express-test-app/client/src/components/BraintreeDropIn.js"],"names":["React","useEffect","useState","dropin","BraintreeDropIn","props","tokenizedKey","show","onPaymentCompleted","braintreeInstance","setBraintreeInstance","undefined","pay","requestPaymentMethod","error","payload","console","payment_method_nonce","nonce","log","fetch","method","headers","body","then","response","json","data","initializeBraintree","create","authorization","paymentOptionPriority","container","instance","teardown","display"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;;AACA,OAAOC,MAAP,MAAmB,uBAAnB,C,CACA;;;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC9C,QAAMC,YAAY,GAAG,mCAArB;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAA+BH,KAArC;AAEA,QAAM,CAACI,iBAAD,EAAoBC,oBAApB,IAA4CR,QAAQ,CAACS,SAAD,CAA1D;;AAEA,QAAMC,GAAG,GAAG,MAAM;AACjB,QAAIH,iBAAJ,EAAuB;AACtBA,MAAAA,iBAAiB,CAACI,oBAAlB,CAAuC,CAACC,KAAD,EAAQC,OAAR,KAAoB;AAC1D,YAAID,KAAJ,EAAW;AACVE,UAAAA,OAAO,CAACF,KAAR,CAAcA,KAAd;AACA,SAFD,MAEO;AACN;AACA;AACA,gBAAMG,oBAAoB,GAAGF,OAAO,CAACG,KAArC;AACAF,UAAAA,OAAO,CAACG,GAAR,CAAY,sBAAZ,EAAoCF,oBAApC,EAJM,CAMN;AACA;;AACAG,UAAAA,KAAK,CAAC,WAAD,EAAc;AAClBC,YAAAA,MAAM,EAAE,MADU;AAGlBC,YAAAA,OAAO,EAAE;AACR,8BAAgB;AADR,aAHS;AAMlBC,YAAAA,IAAI,EAAE;AAACN,cAAAA;AAAD;AANY,WAAd,CAAL,CAQEO,IARF,CAQQC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EARrB,EASEF,IATF,CASQG,IAAD,IAAU;AACfX,YAAAA,OAAO,CAACG,GAAR,CAAYQ,IAAZ;AACA,WAXF,EARM,CAoBN;AAEA;AAEA;AACA;AACD,OA7BD;AA8BA;AACD,GAjCD;;AAmCA1B,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIM,IAAJ,EAAU;AACT,YAAMqB,mBAAmB,GAAG,MAC3BzB,MAAM,CAAC0B,MAAP,CACC;AACC;AACAC,QAAAA,aAAa,EAAExB,YAFhB;AAGCyB,QAAAA,qBAAqB,EAAE,CAAC,OAAD,EAAU,MAAV,EAAkB,QAAlB,CAHxB;AAICC,QAAAA,SAAS,EAAE;AAJZ,OADD,EAOC,UAAUlB,KAAV,EAAiBmB,QAAjB,EAA2B;AAC1B,YAAInB,KAAJ,EAAWE,OAAO,CAACF,KAAR,CAAcA,KAAd,EAAX,KACKJ,oBAAoB,CAACuB,QAAD,CAApB;AACL,OAVF,CADD;;AAcA,UAAIxB,iBAAJ,EAAuB;AACtBA,QAAAA,iBAAiB,CAACyB,QAAlB,GAA6BV,IAA7B,CAAkC,MAAM;AACvCI,UAAAA,mBAAmB;AACnB,SAFD;AAGA,OAJD,MAIO;AACNA,QAAAA,mBAAmB;AACnB;AACD;AACD,GAxBQ,EAwBN,CAACrB,IAAD,CAxBM,CAAT;AA0BA,sBACC;AAAK,IAAA,KAAK,EAAE;AAAE4B,MAAAA,OAAO,EAAG,GAAE5B,IAAI,GAAG,OAAH,GAAa,MAAO;AAAtC,KAAZ;AAAA,4BACC;AAAK,MAAA,EAAE,EAAE;AAAT;AAAA;AAAA;AAAA;AAAA,YADD,eAGC;AACC,MAAA,SAAS,EAAE,oBADZ;AAEC,MAAA,IAAI,EAAC,SAFN;AAGC,MAAA,QAAQ,EAAE,CAACE,iBAHZ;AAIC,MAAA,OAAO,EACNG,GADM,CAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAtCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAiDA;;GApHuBR,e;;KAAAA,e","sourcesContent":["import React, { useEffect, useState } from \"react\";\n// import \"./index.css\";\nimport dropin from \"braintree-web-drop-in\";\n// import { Button } from \"reactstrap\";\n\nexport default function BraintreeDropIn(props) {\n\tconst tokenizedKey = \"sandbox_9qj522s2_ymtkdnwk4zxckp3y\";\n\tconst { show, onPaymentCompleted } = props;\n\n\tconst [braintreeInstance, setBraintreeInstance] = useState(undefined);\n\n\tconst pay = () => {\n\t\tif (braintreeInstance) {\n\t\t\tbraintreeInstance.requestPaymentMethod((error, payload) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t} else {\n\t\t\t\t\t// const paymentMethodNonce = payload.nonce;\n\t\t\t\t\t// use below instead of above to match braintree docs\n\t\t\t\t\tconst payment_method_nonce = payload.nonce;\n\t\t\t\t\tconsole.log(\"payment method nonce\", payment_method_nonce);\n\n\t\t\t\t\t// TODO: use the paymentMethodNonce to\n\t\t\t\t\t//  call you server and complete the payment here\n\t\t\t\t\tfetch(\"/checkout\", {\n\t\t\t\t\t\tmethod: \"POST\",\n\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\tbody: {payment_method_nonce},\n\t\t\t\t\t})\n\t\t\t\t\t\t.then((response) => response.json())\n\t\t\t\t\t\t.then((data) => {\n\t\t\t\t\t\t\tconsole.log(data);\n\t\t\t\t\t\t});\n\t\t\t\t\t// ...\n\n\t\t\t\t\t// alert(`Payment completed with nonce=${payment_method_nonce}`);\n\n\t\t\t\t\t// onPaymentCompleted();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tif (show) {\n\t\t\tconst initializeBraintree = () =>\n\t\t\t\tdropin.create(\n\t\t\t\t\t{\n\t\t\t\t\t\t// insert your tokenization key or client token here\n\t\t\t\t\t\tauthorization: tokenizedKey,\n\t\t\t\t\t\tpaymentOptionPriority: [\"venmo\", \"card\", \"paypal\"],\n\t\t\t\t\t\tcontainer: \"#braintree-drop-in-div\",\n\t\t\t\t\t},\n\t\t\t\t\tfunction (error, instance) {\n\t\t\t\t\t\tif (error) console.error(error);\n\t\t\t\t\t\telse setBraintreeInstance(instance);\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\tif (braintreeInstance) {\n\t\t\t\tbraintreeInstance.teardown().then(() => {\n\t\t\t\t\tinitializeBraintree();\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tinitializeBraintree();\n\t\t\t}\n\t\t}\n\t}, [show]);\n\n\treturn (\n\t\t<div style={{ display: `${show ? \"block\" : \"none\"}` }}>\n\t\t\t<div id={\"braintree-drop-in-div\"} />\n\n\t\t\t<button\n\t\t\t\tclassName={\"braintreePayButton\"}\n\t\t\t\ttype=\"primary\"\n\t\t\t\tdisabled={!braintreeInstance}\n\t\t\t\tonClick={\n\t\t\t\t\tpay\n\t\t\t\t\t// () => {\n\t\t\t\t\t// if (braintreeInstance) {\n\t\t\t\t\t// \tbraintreeInstance.requestPaymentMethod((error, payload) => {\n\t\t\t\t\t// \t\tif (error) {\n\t\t\t\t\t// \t\t\tconsole.error(error);\n\t\t\t\t\t// \t\t} else {\n\t\t\t\t\t// \t\t\t// const paymentMethodNonce = payload.nonce;\n\t\t\t\t\t//             // use below instead of above to match braintree docs\n\t\t\t\t\t//             const payment_method_nonce = payload.nonce;\n\t\t\t\t\t// \t\t\tconsole.log(\"payment method nonce\", payload.nonce);\n\n\t\t\t\t\t// \t\t\t// TODO: use the paymentMethodNonce to\n\t\t\t\t\t// \t\t\t//  call you server and complete the payment here\n\t\t\t\t\t//             fetch(\"/checkout\", {\n\t\t\t\t\t//                 method: \"POST\",\n\t\t\t\t\t//                 headers: {\n\t\t\t\t\t//                     \"Content-Type\": \"application/json\",\n\t\t\t\t\t//                 },\n\t\t\t\t\t//                 body: JSON.stringify(payment_method_nonce),\n\t\t\t\t\t//             })\n\t\t\t\t\t//                 .then((response) => response.json())\n\t\t\t\t\t//                 .then((data) => {\n\t\t\t\t\t//                     console.log(data);\n\t\t\t\t\t//                 });\n\t\t\t\t\t// \t\t\t// ...\n\n\t\t\t\t\t// \t\t\t// alert(`Payment completed with nonce=${payment_method_nonce}`);\n\n\t\t\t\t\t// \t\t\tonPaymentCompleted();\n\t\t\t\t\t// \t\t}\n\t\t\t\t\t// \t});\n\t\t\t\t\t// }\n\t\t\t\t\t// }\n\t\t\t\t}\n\t\t\t>\n\t\t\t\tPay\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}