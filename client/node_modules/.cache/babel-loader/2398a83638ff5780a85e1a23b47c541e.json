{"ast":null,"code":"var _jsxFileName = \"/Users/jeremiahquill/Desktop/code/react-express-test-app/client/src/components/BraintreeDropIn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\"; // import \"./index.css\";\n\nimport dropin from \"braintree-web-drop-in\"; // import { Button } from \"reactstrap\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BraintreeDropIn(props) {\n  _s();\n\n  const tokenizedKey = \"sandbox_9qj522s2_ymtkdnwk4zxckp3y\";\n  const {\n    show,\n    onPaymentCompleted\n  } = props;\n  const [braintreeInstance, setBraintreeInstance] = useState(undefined);\n  useEffect(() => {\n    if (show) {\n      const initializeBraintree = () => dropin.create({\n        // insert your tokenization key or client token here\n        authorization: tokenizedKey,\n        paymentOptionPriority: ['venmo', 'card', 'paypal'],\n        container: \"#braintree-drop-in-div\"\n      }, function (error, instance) {\n        if (error) console.error(error);else setBraintreeInstance(instance);\n      });\n\n      if (braintreeInstance) {\n        braintreeInstance.teardown().then(() => {\n          initializeBraintree();\n        });\n      } else {\n        initializeBraintree();\n      }\n    }\n  }, [show]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: `${show ? \"block\" : \"none\"}`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"braintree-drop-in-div\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"braintreePayButton\",\n      type: \"primary\",\n      disabled: !braintreeInstance,\n      onClick: () => {\n        if (braintreeInstance) {\n          braintreeInstance.requestPaymentMethod((error, payload) => {\n            if (error) {\n              console.error(error);\n            } else {\n              // const paymentMethodNonce = payload.nonce;\n              // use below instead of above to match braintree docs\n              const payment_method_nonce = payload.nonce;\n              console.log(\"payment method nonce\", payload.nonce); // TODO: use the paymentMethodNonce to\n              //  call you server and complete the payment here\n\n              fetch(\"/checkout\", {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                body: payment_method_nonce\n              }).then(response => response.json()).then(data => {\n                console.log(data);\n              }); // ...\n              // alert(`Payment completed with nonce=${payment_method_nonce}`);\n              // onPaymentCompleted();\n            }\n          });\n        }\n      },\n      children: \"Pay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }, this);\n}\n\n_s(BraintreeDropIn, \"VUDUeH7pygx+xiFWFvtRU33/Jxs=\");\n\n_c = BraintreeDropIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"BraintreeDropIn\");","map":{"version":3,"sources":["/Users/jeremiahquill/Desktop/code/react-express-test-app/client/src/components/BraintreeDropIn.js"],"names":["React","useEffect","useState","dropin","BraintreeDropIn","props","tokenizedKey","show","onPaymentCompleted","braintreeInstance","setBraintreeInstance","undefined","initializeBraintree","create","authorization","paymentOptionPriority","container","error","instance","console","teardown","then","display","requestPaymentMethod","payload","payment_method_nonce","nonce","log","fetch","method","headers","body","response","json","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;;AACA,OAAOC,MAAP,MAAmB,uBAAnB,C,CACA;;;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC9C,QAAMC,YAAY,GAAG,mCAArB;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAA+BH,KAArC;AAEA,QAAM,CAACI,iBAAD,EAAoBC,oBAApB,IAA4CR,QAAQ,CAACS,SAAD,CAA1D;AAGAV,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIM,IAAJ,EAAU;AACT,YAAMK,mBAAmB,GAAG,MAC3BT,MAAM,CAACU,MAAP,CACC;AACC;AACAC,QAAAA,aAAa,EAAER,YAFhB;AAGmBS,QAAAA,qBAAqB,EAAE,CAAC,OAAD,EAAU,MAAV,EAAkB,QAAlB,CAH1C;AAICC,QAAAA,SAAS,EAAE;AAJZ,OADD,EAOC,UAAUC,KAAV,EAAiBC,QAAjB,EAA2B;AAC1B,YAAID,KAAJ,EAAWE,OAAO,CAACF,KAAR,CAAcA,KAAd,EAAX,KACKP,oBAAoB,CAACQ,QAAD,CAApB;AACL,OAVF,CADD;;AAcA,UAAIT,iBAAJ,EAAuB;AACtBA,QAAAA,iBAAiB,CAACW,QAAlB,GAA6BC,IAA7B,CAAkC,MAAM;AACvCT,UAAAA,mBAAmB;AACnB,SAFD;AAGA,OAJD,MAIO;AACNA,QAAAA,mBAAmB;AACnB;AACD;AACD,GAxBQ,EAwBN,CAACL,IAAD,CAxBM,CAAT;AA0BA,sBACC;AAAK,IAAA,KAAK,EAAE;AAAEe,MAAAA,OAAO,EAAG,GAAEf,IAAI,GAAG,OAAH,GAAa,MAAO;AAAtC,KAAZ;AAAA,4BACC;AAAK,MAAA,EAAE,EAAE;AAAT;AAAA;AAAA;AAAA;AAAA,YADD,eAGC;AACC,MAAA,SAAS,EAAE,oBADZ;AAEC,MAAA,IAAI,EAAC,SAFN;AAGC,MAAA,QAAQ,EAAE,CAACE,iBAHZ;AAIC,MAAA,OAAO,EAAE,MAAM;AACd,YAAIA,iBAAJ,EAAuB;AACtBA,UAAAA,iBAAiB,CAACc,oBAAlB,CAAuC,CAACN,KAAD,EAAQO,OAAR,KAAoB;AAC1D,gBAAIP,KAAJ,EAAW;AACVE,cAAAA,OAAO,CAACF,KAAR,CAAcA,KAAd;AACA,aAFD,MAEO;AACN;AACwB;AACA,oBAAMQ,oBAAoB,GAAGD,OAAO,CAACE,KAArC;AACxBP,cAAAA,OAAO,CAACQ,GAAR,CAAY,sBAAZ,EAAoCH,OAAO,CAACE,KAA5C,EAJM,CAMN;AACA;;AACwBE,cAAAA,KAAK,CAAC,WAAD,EAAc;AACfC,gBAAAA,MAAM,EAAE,MADO;AAEfC,gBAAAA,OAAO,EAAE;AACL,kCAAgB;AADX,iBAFM;AAKfC,gBAAAA,IAAI,EAAEN;AALS,eAAd,CAAL,CAOKJ,IAPL,CAOWW,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAPxB,EAQKZ,IARL,CAQWa,IAAD,IAAU;AACZf,gBAAAA,OAAO,CAACQ,GAAR,CAAYO,IAAZ;AACH,eAVL,EARlB,CAmBN;AAEA;AAEA;AACA;AACD,WA5BD;AA6BA;AACD,OApCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AA8CA;;GA/EuB9B,e;;KAAAA,e","sourcesContent":["import React, { useEffect, useState } from \"react\";\n// import \"./index.css\";\nimport dropin from \"braintree-web-drop-in\";\n// import { Button } from \"reactstrap\";\n\nexport default function BraintreeDropIn(props) {\n\tconst tokenizedKey = \"sandbox_9qj522s2_ymtkdnwk4zxckp3y\";\n\tconst { show, onPaymentCompleted } = props;\n\n\tconst [braintreeInstance, setBraintreeInstance] = useState(undefined);\n\n\n\tuseEffect(() => {\n\t\tif (show) {\n\t\t\tconst initializeBraintree = () =>\n\t\t\t\tdropin.create(\n\t\t\t\t\t{\n\t\t\t\t\t\t// insert your tokenization key or client token here\n\t\t\t\t\t\tauthorization: tokenizedKey,\n                        paymentOptionPriority: ['venmo', 'card', 'paypal'],\n\t\t\t\t\t\tcontainer: \"#braintree-drop-in-div\",\n\t\t\t\t\t},\n\t\t\t\t\tfunction (error, instance) {\n\t\t\t\t\t\tif (error) console.error(error);\n\t\t\t\t\t\telse setBraintreeInstance(instance);\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\tif (braintreeInstance) {\n\t\t\t\tbraintreeInstance.teardown().then(() => {\n\t\t\t\t\tinitializeBraintree();\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tinitializeBraintree();\n\t\t\t}\n\t\t}\n\t}, [show]);\n\n\treturn (\n\t\t<div style={{ display: `${show ? \"block\" : \"none\"}` }}>\n\t\t\t<div id={\"braintree-drop-in-div\"} />\n\n\t\t\t<button\n\t\t\t\tclassName={\"braintreePayButton\"}\n\t\t\t\ttype=\"primary\"\n\t\t\t\tdisabled={!braintreeInstance}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tif (braintreeInstance) {\n\t\t\t\t\t\tbraintreeInstance.requestPaymentMethod((error, payload) => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\tconsole.error(error);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// const paymentMethodNonce = payload.nonce;\n                                // use below instead of above to match braintree docs\n                                const payment_method_nonce = payload.nonce;\n\t\t\t\t\t\t\t\tconsole.log(\"payment method nonce\", payload.nonce);\n\n\t\t\t\t\t\t\t\t// TODO: use the paymentMethodNonce to\n\t\t\t\t\t\t\t\t//  call you server and complete the payment here\n                                fetch(\"/checkout\", {\n                                    method: \"POST\",\n                                    headers: {\n                                        \"Content-Type\": \"application/json\",\n                                    },\n                                    body: payment_method_nonce,\n                                })\n                                    .then((response) => response.json())\n                                    .then((data) => {\n                                        console.log(data);\n                                    });\n\t\t\t\t\t\t\t\t// ...\n\n\t\t\t\t\t\t\t\t// alert(`Payment completed with nonce=${payment_method_nonce}`);\n\n\t\t\t\t\t\t\t\t// onPaymentCompleted();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tPay\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}