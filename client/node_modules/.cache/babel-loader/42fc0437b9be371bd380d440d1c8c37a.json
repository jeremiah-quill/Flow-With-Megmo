{"ast":null,"code":"var _jsxFileName = \"/Users/jeremiahquill/Desktop/code/flow-with-megmo/client/src/components/BraintreeDropIn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\"; // import \"./index.css\";\n\nimport dropin from \"braintree-web-drop-in\"; // import venmo from 'braintree-web-drop-in';\n// import { Button } from \"reactstrap\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BraintreeDropIn(props) {\n  _s();\n\n  const tokenizedKey = \"sandbox_9qj522s2_ymtkdnwk4zxckp3y\"; // const { show, onPaymentCompleted } = props;\n\n  const [braintreeInstance, setBraintreeInstance] = useState(undefined);\n\n  const handleSubmit = e => {\n    e.preventDefault(); //\n\n    pay();\n  };\n\n  const pay = () => {\n    // once braintree instance is set, we get the payment method (from where?) and send it to the back end to complete the transaction\n    if (braintreeInstance) {\n      braintreeInstance.requestPaymentMethod((error, payload) => {\n        if (error) {\n          console.error(error);\n        } else {\n          const payment_method_nonce = payload.nonce; // use payment method nonce to send to backend to complete transaction\n\n          fetch(\"/checkout\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              payment_method_nonce\n            })\n          }).then(response => response.json()).then(data => {\n            console.log(data);\n          });\n          console.log(\"payment complete! TODO: add form data to database\"); // onPaymentCompleted();\n        }\n      });\n    }\n  };\n\n  useEffect(() => {\n    // TODO: on page load?\n    // if show prop is passed in as is true, initialize braintree which calls a create function on the dropin object we import from braintree SDK\n    // if (show) {\n    const initializeBraintree = () => dropin.create({\n      // can use tozenized key, or request a key from server using api/secret (gaining some flexibility, unnecessary for our purposes)\n      authorization: tokenizedKey,\n      // sets order of options\n      paymentOptionPriority: [\"venmo\", \"card\"],\n      container: \"#braintree-drop-in-div\",\n      // by default it shows credit card option.  to add venmo we configure it below.  Requires allowDesktop to be set to true so it shows QR code rather than sending you to venmo.com\n      venmo: {\n        allowDesktop: true\n      }\n    }, // TODO: what is this doing?\n    function (error, instance) {\n      if (error) console.error(error);else setBraintreeInstance(instance);\n    }); // TODO: what is this doing?\n\n\n    if (braintreeInstance) {\n      braintreeInstance.teardown().then(() => {\n        initializeBraintree();\n      });\n    } else {\n      initializeBraintree();\n    } // }\n    // TODO: why is this set to [show]?\n\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"braintree-container\" // style={{ display: `${show ? \"block\" : \"none\"}` }}\n    ,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"First Name\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Last Name\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Email\",\n        type: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"braintree-drop-in-div\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"braintreePayButton\",\n        type: \"submit\",\n        disabled: !braintreeInstance // onClick={pay}\n        ,\n        value: \"Book Class\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 3\n  }, this);\n}\n\n_s(BraintreeDropIn, \"VUDUeH7pygx+xiFWFvtRU33/Jxs=\");\n\n_c = BraintreeDropIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"BraintreeDropIn\");","map":{"version":3,"sources":["/Users/jeremiahquill/Desktop/code/flow-with-megmo/client/src/components/BraintreeDropIn.js"],"names":["React","useEffect","useState","dropin","BraintreeDropIn","props","tokenizedKey","braintreeInstance","setBraintreeInstance","undefined","handleSubmit","e","preventDefault","pay","requestPaymentMethod","error","payload","console","payment_method_nonce","nonce","fetch","method","headers","body","JSON","stringify","then","response","json","data","log","initializeBraintree","create","authorization","paymentOptionPriority","container","venmo","allowDesktop","instance","teardown"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n// import \"./index.css\";\nimport dropin from \"braintree-web-drop-in\";\n// import venmo from 'braintree-web-drop-in';\n// import { Button } from \"reactstrap\";\n\nexport default function BraintreeDropIn(props) {\n\tconst tokenizedKey = \"sandbox_9qj522s2_ymtkdnwk4zxckp3y\";\n\t// const { show, onPaymentCompleted } = props;\n\n\tconst [braintreeInstance, setBraintreeInstance] = useState(undefined);\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\t//\n\t\tpay();\n\t};\n\n\n\tconst pay = () => {\n\t\t// once braintree instance is set, we get the payment method (from where?) and send it to the back end to complete the transaction\n\t\tif (braintreeInstance) {\n\t\t\tbraintreeInstance.requestPaymentMethod((error, payload) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t} else {\n\t\t\t\t\tconst payment_method_nonce = payload.nonce;\n\t\t\t\t\t// use payment method nonce to send to backend to complete transaction\n\t\t\t\t\tfetch(\"/checkout\", {\n\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\tbody: JSON.stringify({ payment_method_nonce }),\n\t\t\t\t\t})\n\t\t\t\t\t\t.then((response) => response.json())\n\t\t\t\t\t\t.then((data) => {\n\t\t\t\t\t\t\tconsole.log(data);\n\t\t\t\t\t\t});\n\n\t\t\t\t\tconsole.log(\"payment complete! TODO: add form data to database\");\n\t\t\t\t\t// onPaymentCompleted();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\t// TODO: on page load?\n\t\t// if show prop is passed in as is true, initialize braintree which calls a create function on the dropin object we import from braintree SDK\n\t\t// if (show) {\n\t\t\tconst initializeBraintree = () =>\n\t\t\t\tdropin.create(\n\t\t\t\t\t{\n\t\t\t\t\t\t// can use tozenized key, or request a key from server using api/secret (gaining some flexibility, unnecessary for our purposes)\n\t\t\t\t\t\tauthorization: tokenizedKey,\n\t\t\t\t\t\t// sets order of options\n\t\t\t\t\t\tpaymentOptionPriority: [\"venmo\", \"card\"],\n\t\t\t\t\t\tcontainer: \"#braintree-drop-in-div\",\n\t\t\t\t\t\t// by default it shows credit card option.  to add venmo we configure it below.  Requires allowDesktop to be set to true so it shows QR code rather than sending you to venmo.com\n\t\t\t\t\t\tvenmo: {\n\t\t\t\t\t\t\tallowDesktop: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t// TODO: what is this doing?\n\t\t\t\t\tfunction (error, instance) {\n\t\t\t\t\t\tif (error) console.error(error);\n\t\t\t\t\t\telse setBraintreeInstance(instance);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t// TODO: what is this doing?\n\t\t\tif (braintreeInstance) {\n\t\t\t\tbraintreeInstance.teardown().then(() => {\n\t\t\t\t\tinitializeBraintree();\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tinitializeBraintree();\n\t\t\t}\n\t\t// }\n\t\t// TODO: why is this set to [show]?\n\t}, []);\n\n\treturn (\n\t\t<div\n\t\t\tclassName=\"braintree-container\"\n\t\t\t// style={{ display: `${show ? \"block\" : \"none\"}` }}\n\t\t>\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t{/* add onchange listeners to the below inputs to map to state and complete handleSubmit function */}\n\t\t\t\t<input placeholder=\"First Name\" type=\"text\" />\n\t\t\t\t<input placeholder=\"Last Name\" type=\"text\" />\n\t\t\t\t<input placeholder=\"Email\" type=\"email\" />\n\t\t\t\t<div id={\"braintree-drop-in-div\"} />\n\n\t\t\t\t<input\n\t\t\t\t\tclassName={\"braintreePayButton\"}\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tdisabled={!braintreeInstance}\n\t\t\t\t\t// onClick={pay}\n\t\t\t\t\tvalue=\"Book Class\"\n\t\t\t\t/>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}