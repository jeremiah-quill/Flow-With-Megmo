{"ast":null,"code":"var _jsxFileName = \"/Users/jeremiahquill/Desktop/code/react-express-test-app/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [date, setDate] = useState(\"\");\n  const [time, setTime] = useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    createClass(date, time); // reset form\n\n    setDate(\"\");\n    setTime(\"\");\n  }; // Create a new yoga class\n\n\n  const createClass = (classDate, classTime) => {\n    // Eventually bring in this data from date/time picker form\n    const data = {\n      topic: \"Flow with Megmo\",\n      type: 2,\n      start_time: `${classDate}T${classTime}:00`,\n      duration: 60\n    }; // Send post request to express server with data from form\n\n    fetch(\"/api\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(data => {\n      // Get back meeting details to add to state/re-render UI\n      console.log(data);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: date,\n        onChange: e => setDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        value: time,\n        onChange: e => setTime(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Create Class\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"zADheWPMzQCvmuEr2I4lRO7BW4s=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jeremiahquill/Desktop/code/react-express-test-app/client/src/App.js"],"names":["React","useEffect","useState","App","date","setDate","time","setTime","handleSubmit","e","preventDefault","createClass","classDate","classTime","data","topic","type","start_time","duration","fetch","method","headers","body","JSON","stringify","then","response","json","console","log","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACd,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMM,YAAY,GAAIC,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACEC,IAAAA,WAAW,CAACP,IAAD,EAAOE,IAAP,CAAX,CAFyB,CAGzB;;AACFD,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,OAAO,CAAC,EAAD,CAAP;AACA,GAND,CAJc,CAYd;;;AACA,QAAMI,WAAW,GAAG,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AAC7C;AACA,UAAMC,IAAI,GAAG;AACZC,MAAAA,KAAK,EAAE,iBADK;AAEZC,MAAAA,IAAI,EAAE,CAFM;AAGZC,MAAAA,UAAU,EAAG,GAAEL,SAAU,IAAGC,SAAU,KAH1B;AAIZK,MAAAA,QAAQ,EAAE;AAJE,KAAb,CAF6C,CAS7C;;AACAC,IAAAA,KAAK,CAAC,MAAD,EAAS;AACbC,MAAAA,MAAM,EAAE,MADK;AAEbC,MAAAA,OAAO,EAAE;AACR,wBAAgB;AADR,OAFI;AAKbC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,IAAf;AALO,KAAT,CAAL,CAOEW,IAPF,CAOQC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAPrB,EAQEF,IARF,CAQQX,IAAD,IAAU;AACf;AACAc,MAAAA,OAAO,CAACC,GAAR,CAAYf,IAAZ;AACA,KAXF;AAYA,GAtBD;;AAwBA,sBACC;AAAA,2BACC;AAAM,MAAA,QAAQ,EAAEN,YAAhB;AAAA,8BACC;AACC,QAAA,IAAI,EAAC,MADN;AAEC,QAAA,KAAK,EAAEJ,IAFR;AAGC,QAAA,QAAQ,EAAGK,CAAD,IAAOJ,OAAO,CAACI,CAAC,CAACqB,MAAF,CAASC,KAAV;AAHzB;AAAA;AAAA;AAAA;AAAA,cADD,eAMC;AACC,QAAA,IAAI,EAAC,MADN;AAEC,QAAA,KAAK,EAAEzB,IAFR;AAGC,QAAA,QAAQ,EAAGG,CAAD,IAAOF,OAAO,CAACE,CAAC,CAACqB,MAAF,CAASC,KAAV;AAHzB;AAAA;AAAA;AAAA;AAAA,cAND,eAWC;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAXD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAkBA;;GAvDQ5B,G;;KAAAA,G;AAyDT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction App() {\n\tconst [date, setDate] = useState(\"\");\n\tconst [time, setTime] = useState(\"\");\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n    createClass(date, time)\n    // reset form\n\t\tsetDate(\"\");\n\t\tsetTime(\"\");\n\t};\n\n\t// Create a new yoga class\n\tconst createClass = (classDate, classTime) => {\n\t\t// Eventually bring in this data from date/time picker form\n\t\tconst data = {\n\t\t\ttopic: \"Flow with Megmo\",\n\t\t\ttype: 2,\n\t\t\tstart_time: `${classDate}T${classTime}:00`,\n\t\t\tduration: 60,\n\t\t};\n\n\t\t// Send post request to express server with data from form\n\t\tfetch(\"/api\", {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t\tbody: JSON.stringify(data),\n\t\t})\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\t// Get back meeting details to add to state/re-render UI\n\t\t\t\tconsole.log(data);\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"date\"\n\t\t\t\t\tvalue={date}\n\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"time\"\n\t\t\t\t\tvalue={time}\n\t\t\t\t\tonChange={(e) => setTime(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<input type=\"submit\" value=\"Create Class\" />\n\t\t\t</form>\n\t\t\t{/* <button onClick={createClass}>fetch data</button> */}\n\t\t</div>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}