{"ast":null,"code":"var _jsxFileName = \"/Users/jeremiahquill/Desktop/code/flow-with-megmo/client/src/components/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dashboard() {\n  _s();\n\n  const [date, setDate] = useState(\"\");\n  const [time, setTime] = useState(\"\"); // Create a new yoga class\n\n  const createClass = (classDate, classTime) => {\n    const classDetails = {\n      topic: \"Flow with Megmo\",\n      type: 2,\n      start_time: `${classDate}T${classTime}:00`,\n      duration: 60,\n      settings: {\n        approval_type: 0\n      }\n    }; // Send post request to express server with data from form\n\n    fetch(\"/api\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(classDetails)\n    }).then(response => response.json()).then(data => {\n      // TODO: Get back meeting details to add to state/re-render UI\n      console.log(data);\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    createClass(date, time); // reset form\n\n    setDate(\"\");\n    setTime(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: date,\n        onChange: e => setDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        value: time,\n        onChange: e => setTime(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Create Class\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Dashboard, \"zADheWPMzQCvmuEr2I4lRO7BW4s=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/jeremiahquill/Desktop/code/flow-with-megmo/client/src/components/Dashboard.js"],"names":["React","useState","Dashboard","date","setDate","time","setTime","createClass","classDate","classTime","classDetails","topic","type","start_time","duration","settings","approval_type","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","handleSubmit","e","preventDefault","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AAEjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;AACH,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC,CAHoB,CAIpB;;AACA,QAAMM,WAAW,GAAG,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AAC7C,UAAMC,YAAY,GAAG;AACpBC,MAAAA,KAAK,EAAE,iBADa;AAEpBC,MAAAA,IAAI,EAAE,CAFc;AAGpBC,MAAAA,UAAU,EAAG,GAAEL,SAAU,IAAGC,SAAU,KAHlB;AAIpBK,MAAAA,QAAQ,EAAE,EAJU;AAKXC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,aAAa,EAAE;AADT;AALC,KAArB,CAD6C,CAW7C;;AACAC,IAAAA,KAAK,CAAC,MAAD,EAAS;AACbC,MAAAA,MAAM,EAAE,MADK;AAEbC,MAAAA,OAAO,EAAE;AACR,wBAAgB;AADR,OAFI;AAKbC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,YAAf;AALO,KAAT,CAAL,CAOEa,IAPF,CAOQC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAPrB,EAQEF,IARF,CAQQG,IAAD,IAAU;AACf;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,KAXF;AAYA,GAxBD;;AA0BG,QAAMG,YAAY,GAAIC,CAAD,IAAO;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AACAxB,IAAAA,WAAW,CAACJ,IAAD,EAAOE,IAAP,CAAX,CAF8B,CAG9B;;AACAD,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,OAAO,CAAC,EAAD,CAAP;AACA,GANE;;AAQF,sBAAO;AAAA,2BAEN;AAAM,MAAA,QAAQ,EAAEuB,YAAhB;AAAA,8BACE;AACC,QAAA,IAAI,EAAC,MADN;AAEC,QAAA,KAAK,EAAE1B,IAFR;AAGC,QAAA,QAAQ,EAAG2B,CAAD,IAAO1B,OAAO,CAAC0B,CAAC,CAACE,MAAF,CAASC,KAAV;AAHzB;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AACC,QAAA,IAAI,EAAC,MADN;AAEC,QAAA,KAAK,EAAE5B,IAFR;AAGC,QAAA,QAAQ,EAAGyB,CAAD,IAAOxB,OAAO,CAACwB,CAAC,CAACE,MAAF,CAASC,KAAV;AAHzB;AAAA;AAAA;AAAA;AAAA,cANF,eAWE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFM;AAAA;AAAA;AAAA;AAAA,UAAP;AAiBD;;GAxDQ/B,S;;KAAAA,S;AA0DT,eAAeA,SAAf","sourcesContent":["import React, {useState} from 'react';\n\nfunction Dashboard() {\n\n    const [date, setDate] = useState(\"\");\n\tconst [time, setTime] = useState(\"\");\n\t// Create a new yoga class\n\tconst createClass = (classDate, classTime) => {\n\t\tconst classDetails = {\n\t\t\ttopic: \"Flow with Megmo\",\n\t\t\ttype: 2,\n\t\t\tstart_time: `${classDate}T${classTime}:00`,\n\t\t\tduration: 60,\n            settings: {\n                approval_type: 0\n            }\n\t\t};\n\n\t\t// Send post request to express server with data from form\n\t\tfetch(\"/api\", {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t\tbody: JSON.stringify(classDetails),\n\t\t})\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\t// TODO: Get back meeting details to add to state/re-render UI\n\t\t\t\tconsole.log(data);\n\t\t\t});\n\t};\n\n    const handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tcreateClass(date, time);\n\t\t// reset form\n\t\tsetDate(\"\");\n\t\tsetTime(\"\");\n\t};\n\n  return <div>\n      \t\t\t{/* <div className=\"app-container\"> */}\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\tvalue={date}\n\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"time\"\n\t\t\t\t\t\tvalue={time}\n\t\t\t\t\t\tonChange={(e) => setTime(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<input type=\"submit\" value=\"Create Class\" />\n\t\t\t\t</form>\n\t\t\t{/* </div> */}\n  </div>;\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}